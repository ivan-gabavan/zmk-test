/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen { zmk,physical-layout = &foostan_corne_6col_layout; };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        capdance: capdance {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPDANCE";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;
        };

        volknob: volume_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_VOLUME_KNOB";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        rgbknob: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ENCODER_RGB";
            #sensor-binding-cells = <2>;
            bindings = <&rgb_ug>, <&rgb_ug>;
        };

        one_shot_shift: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "ONE_SHOT_SHIFT";
            binding = <MOD_LSFT>;
            release-after-tap;
            quick-release = <false>;
            retro-tap = <false>;
            wait-ms = <500>;
        };
    };

    macros {
        switch_to_ru: switch_to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(MINUS)) &to 0>;
            label = "SWITCH_TO_RU";
        };

        switch_to_en: switch_to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(MINUS)) &to 0>;
            label = "SWITCH_TO_EN";
        };

        select_complite: ce {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB &kp ENTER>;
            label = "CE";
        };

        google_meet_mute: google_meet_mute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(D) &kp LG(E)>;
            label = "GOOGLE_MEET_MUTE";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        dota {
            bindings = <
&kp N5          &kp NUMBER_4  &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &kp Y     &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp S         &kp Q         &kp W         &kp E         &kp R     &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_ALT    &kp G         &kp H         &kp F         &kp D         &kp T     &trans  &trans  &trans  &trans  &trans  &to 0
                                            &kp N9        &kp N8        &kp N7    &to 0   &trans  &trans
            >;
        };

        a {
            bindings = <
&kp    &kp    &kp    &kp           &kp        &kp                 &kp             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp    &kp    &kp
&kp Q  &kp A  &kp R  &kp S         &kp T      &kp ESCAPE          &kp BACKSPACE   &kp N                 &kp E                  &kp I  &kp O  &kp Z
&kp    &kp    &kp    &kp           &kp SPACE  &kp                 &kp ENTER       &kp SPACE             &kp DOT                &kp    &kp    &kp
                     &kp LEFT_ALT  &mo 3      &kp LEFT_CONTROL    &kp LEFT_SHIFT  &mo 2                 &mt LEFT_COMMAND TAB
            >;
        };

        b {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans    &trans             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans  &trans
&trans  &kp V   &kp P   &kp D   &kp C      &trans    &kp LG(BACKSPACE)  &kp L             &kp H              &kp B   &kp K   &trans
&trans  &trans  &trans  &trans  &kp SPACE  &trans    &trans             &kp SPACE         &trans             &trans  &trans  &trans
                        &trans  &trans     &trans    &trans             &trans            &trans
            >;
        };

        c {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans    &trans             &trans     &trans  &trans  &trans  &trans
&trans  &kp X   &kp G   &kp W   &kp F      &trans    &kp LA(BACKSPACE)  &kp U      &kp M   &kp Y   &kp J   &trans
&trans  &trans  &trans  &trans  &kp SPACE  &trans    &trans             &kp SPACE  &trans  &trans  &trans  &trans
                        &trans  &trans     &trans    &trans             &trans     &trans
            >;
        };
    };
};
